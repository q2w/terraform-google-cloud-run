# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: terraform-google-cloud-run-function
  annotations:
    config.kubernetes.io/local-config: "true"
spec:
  info:
    title: Cloud Run v2 Service
    source:
      repo: https://github.com/GoogleCloudPlatform/terraform-google-cloud-run.git
      sourceType: git
      dir: /modules/function
    actuationTool:
      flavor: Terraform
    description: {}
  content:
    examples:
      - name: cloud_run_vpc_connector
        location: examples/cloud_run_vpc_connector
      - name: secure_cloud_run
        location: examples/secure_cloud_run
      - name: secure_cloud_run_standalone
        location: examples/secure_cloud_run_standalone
      - name: simple_cloud_run
        location: examples/simple_cloud_run
      - name: simple_cloud_run_with_cmek
        location: examples/simple_cloud_run_with_cmek
      - name: simple_job_exec
        location: examples/simple_job_exec
      - name: v2
        location: examples/v2
      - name: v2_with_gmp
        location: examples/v2_with_gmp
      - name: v2_with_iap
        location: examples/v2_with_iap
  interfaces:
    variables:
      - name: project_id
        varType: string
        required: true
      - name: location
        varType: string
        required: true
      - name: name
        varType: string
        required: true
      - name: build_config
        varType: |-
          object({
              runtime     = string
              entry_point = string
              storage_source = object({
                bucket = string
                object = string
              })
            })
        required: true
      - name: service_config
        varType: |-
          object({
              available_memory      = string
              environment_variables = map(string)
            })
        required: true
        connections:
          - source:
              source: github.com/terraform-google-modules/terraform-google-bigquery
              version: ">= 10.0"
            spec:
              outputExpr: "{\"BQ_DATASET\": env_vars.BIGQUERY_DATASET, \"BQ_TABLE\": table_ids[0]}"
              inputPath: environment_variables
      - name: service_account_project_roles
        varType: list(string)
        defaultValue: []
        connections:
          - source:
              source: github.com/terraform-google-modules/terraform-google-bigquery
              version: ">= 10.0"
            spec:
              outputExpr: "[\"roles/bigquery.dataEditor\"]"
          - source:
              source: github.com/q2w/terraform-google-cloud-workflows//modules/eventarc
              version: ">= 0.1.0"
            spec:
              outputExpr: "[\"roles/eventarc.eventReceiver\"]"
    outputs:
      - name: function_name
        type: string
      - name: location
        type: string
      - name: service_account_id
        description: Service account id and email
        type:
          - object
          - email: string
            id: string
            member: string
  requirements:
    roles:
      - level: Project
        roles:
          - roles/accesscontextmanager.policyAdmin
          - roles/orgpolicy.policyAdmin
      - level: Project
        roles:
          - roles/resourcemanager.folderAdmin
          - roles/resourcemanager.projectCreator
          - roles/resourcemanager.projectDeleter
      - level: Project
        roles:
          - roles/run.admin
          - roles/iam.serviceAccountAdmin
          - roles/artifactregistry.admin
          - roles/iam.serviceAccountUser
          - roles/serviceusage.serviceUsageViewer
          - roles/cloudkms.admin
          - roles/resourcemanager.projectIamAdmin
          - roles/compute.viewer
          - roles/iap.admin
    services:
      - cloudresourcemanager.googleapis.com
      - storage-api.googleapis.com
      - serviceusage.googleapis.com
      - run.googleapis.com
      - cloudkms.googleapis.com
      - iam.googleapis.com
      - accesscontextmanager.googleapis.com
      - cloudbilling.googleapis.com
      - monitoring.googleapis.com
      - compute.googleapis.com
      - iap.googleapis.com
